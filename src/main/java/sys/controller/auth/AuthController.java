package sys.controller.auth;

import org.springframework.web.bind.annotation.*;
import sys.common.Constant;
import sys.common.JwtHelper;
import sys.common.ResultEnum;
import sys.controller.Base;
import sys.entity.User;
import sys.entity.auth.Audience;
import sys.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;

import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import static sys.common.ResultEnum.success;

/**
 * @author zhaoruipeng
 * @ClassName AuthController
 * @Package hello.controller
 * @date 2018/4/3 15:57
 */

@RestController    // This means that this class is a Controller
public class AuthController {

    @Autowired // This means to get the bean called userRepository
    private UserRepository userRepository; // Which is auto-generated by Spring, we will use it to handle the data

    @Autowired
    private Audience audience;

    @PostMapping(path = "/login")
    public Object login(@RequestBody User user, HttpServletRequest request, HttpServletResponse response) {
        User _user = userRepository.findByName(user.getName());
        if (_user != null) {
            if (!User.PASSWORD_ENCODER.matches(user.getPassword(), _user.getPassword())) {
                return ResultEnum._403(response);
            }
            String jwtToken = JwtHelper.createJWT(
                    _user.getName(),
                    _user.getId().toString(),
                    _user.getRoles().toString(),
                    audience.getClientId(),
                    audience.getName(),
                    audience.getExpiresSecond() * 1000,
                    audience.getBase64Secret());

            String result_str = "bearer;" + jwtToken;

            System.out.println("=================token info=================");
            System.out.println(request.getAttribute(Constant.CLAIMS));
            request.getAttribute(Constant.CLAIMS);
            return ResultEnum.success(result_str);
        }
        return ResultEnum._403(response);
    }
}
