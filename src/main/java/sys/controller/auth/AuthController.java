package sys.controller.auth;

import sys.common.JwtHelper;
import sys.common.ResultEnum;
import sys.controller.Base;
import sys.entity.User;
import sys.entity.auth.Audience;
import sys.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import static sys.common.ResultEnum.success;

/**
 * @author zhaoruipeng
 * @ClassName AuthController
 * @Package hello.controller
 * @date 2018/4/3 15:57
 */
@RestController    // This means that this class is a Controller
public class AuthController {

    @Autowired // This means to get the bean called userRepository
    private UserRepository userRepository; // Which is auto-generated by Spring, we will use it to handle the data

    @Autowired
    private Audience audience;


    @RequestMapping(value = "/login", method = RequestMethod.POST)
    public Object login(@RequestParam(value = "userName", required = true) String userName, @RequestParam(value = "password", required = true) String password) {
//        User user = new User(userName, password);
//        user.setName(userName);
//        user.setEmail(password);
//        System.out.println(userName);
//        System.out.println(password);
//        System.out.println(user.getPassword());
        User user = userRepository.findByName(userName);
        if (!User.PASSWORD_ENCODER.matches(password, user.getPassword())) {
            return ResultEnum._403();
        }
        String jwtToken = JwtHelper.createJWT(
                user.getName(),
                user.getId().toString(),
                user.getRoles().toString(),
                audience.getClientId(),
                audience.getName(),
                audience.getExpiresSecond()*1000,
                audience.getBase64Secret());

        String result_str = "bearer;" + jwtToken;
        return ResultEnum.success(result_str);
    }
}
